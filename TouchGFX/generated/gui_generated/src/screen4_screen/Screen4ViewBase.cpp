/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen4_screen/Screen4ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen4ViewBase::Screen4ViewBase() :
    sliderValueChangedCallback(this, &Screen4ViewBase::sliderValueChangedCallbackHandler),
    buttonCallback(this, &Screen4ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(5, 1, 48));
    add(box1);

    button1.setXY(743, 421);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_RIGHT_ARROW_SIZE50_ID), touchgfx::Bitmap(BITMAP_RIGHT_CHEVRON_SIZE50_ID));
    button1.setAction(buttonCallback);
    add(button1);

    boxProgress1.setXY(250, 143);
    boxProgress1.setProgressIndicatorPosition(0, 0, 300, 10);
    boxProgress1.setRange(0, 300);
    boxProgress1.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    boxProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BOXPROGRESS_NORMAL_MEDIUM_ID));
    boxProgress1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 0));
    boxProgress1.setValue(60);
    add(boxProgress1);

    textProgress1.setXY(330, 183);
    textProgress1.setProgressIndicatorPosition(12, 10, 150, 30);
    textProgress1.setRange(0, 100);
    textProgress1.setColor(touchgfx::Color::getColorFromRGB(157, 247, 30));
    textProgress1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1EKU));
    textProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TEXTPROGRESS_BACKGROUNDS_ROUNDED_LIGHT_ID));
    textProgress1.setValue(60);
    add(textProgress1);

    slider1.setXY(209, 267);
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_LARGE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_LIGHT_ID));
    slider1.setupHorizontalSlider(16, 11, 0, 0, 300);
    slider1.setValueRange(0, 300);
    slider1.setValue(0);
    slider1.setNewValueCallback(sliderValueChangedCallback);
    add(slider1);
}

Screen4ViewBase::~Screen4ViewBase()
{

}

void Screen4ViewBase::setupScreen()
{

}

void Screen4ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider1)
    {
        //Interaction1
        //When slider1 value changed call virtual function
        //Call function1
        function1(value);
    }
}

void Screen4ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction2
        //When button1 clicked change screen to screen
        //Go to screen with screen transition towards East
        application().gotoscreenScreenWipeTransitionEast();
    }
}
